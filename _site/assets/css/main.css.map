{"version":3,"sourceRoot":"","sources":["1-tools/_normalize.scss","1-tools/_fonts.scss","2-base/_base.sass","2-base/_vars.sass","2-base/placeholders.sass","3-modules/_header.sass","3-modules/_footer.sass","3-modules/_about.sass","1-tools/bourbon/css3/_flex-box.scss","1-tools/bourbon/addons/_prefixer.scss","1-tools/bourbon/addons/_size.scss","3-modules/_research.sass","3-modules/_teaching.sass","1-tools/bourbon/addons/_clearfix.scss","3-modules/_contact.sass","3-modules/_course_content.sass"],"names":[],"mappings":"AACA;EAAK;EAAuB;EAA0B;;;AAA8B;EAAK;;;AAAS;EAAsF;;;AAAc;EAA4B;EAAqB;;;AAAwB;EAAsB;EAAa;;;AAAS;EAAkB;;;AAAa;EAAE;;;AAAe;EAAiB;;;AAAU;EAAY;;;AAAyB;EAAS;;;AAAgB;EAAI;;;AAAkB;EAAG;EAAc;;;AAAe;EAAK;EAAgB;;;AAAW;EAAM;;;AAAc;EAAQ;EAAc;EAAc;EAAkB;;;AAAwB;EAAI;;;AAAU;EAAI;;;AAAc;EAAI;;;AAAS;EAAe;;;AAAgB;EAAO;;;AAAgB;EAAG;EAA4B;EAAuB;;;AAAS;EAAI;;;AAAc;EAAkB;EAAgC;;;AAAc;EAAsC;EAAc;EAAa;;;AAAS;EAAO;;;AAAiB;EAAc;;;AAAoB;EAAoE;EAA0B;;;AAAe;EAAsC;;;AAAe;EAAiD;EAAS;;;AAAU;EAAM;;;AAAmB;EAAuC;EAAsB;;;AAAU;EAA4F;;;AAAY;EAAmB;EAA6B;EAA4B;EAA+B;;;AAAuB;EAA+F;;;AAAwB;EAAS;EAAwB;EAAa;;;AAA2B;EAAO;EAAS;;;AAAU;EAAS;;;AAAc;EAAS;;;AAAgB;EAAM;EAAyB;;;AAAiB;EAAM;;;ACDp2D;EACE;EACA;EACA;EACA;;ACFF;AAAA;EAEE,OCHa;EDIb;;;AAEF;EACE;EACA;EACA;;;AAEF;EACE;EACA;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAIF;EACE;;;AAEF;EACE;;;AAEF;EACE;;;AAEF;EACE;EACA;EACA;EACA;EACA;;;AAMF;EACE,OCvDa;EDwDb;EACA;;;AAEF;EACE;;;AAMF;EACE,YChEgB;;;ADkElB;EACE,YCnEgB;;;ADqElB;EACE;;;AAEF;EACE;;;AAEF;EACE,6BC5EgB;;;ADkFlB;EACE,YCrFS;EDsFT;EACA;EACA;EACA,OCtFW;EDuFX;EACA;;;AE7FF;EACE;EAEE;EACA;EACA;;;ACLJ;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AACA;EACE;EACA;;AAIA;EACE;;AAEN;EACE;EACA;EAEE;EACA;EACF;EACA;;AACA;EACE;;;AC7BN;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AAEA;EACE;EACA;EAEA;;AACF;EAEE;EACA;;AAEA;EACE;;;ACvBR;EACE;EACA;EACA;EACA;;;AAGF;EACE;EC6DM;EACA;EACA;EAGA;EACA;EACA;EACA;EDnEN;EEDM,mBFEO;EEGP,gBFHO;EEkBP,WFlBO;EEFP,qBFEO;EEGP,kBFHO;EEQP,iBFRO;EEaP,gBFbO;EEkBP,aFlBO;ECmQX,gBDnQW;EEFP,kBDkOY;EC7NZ,eD6NY;EC9MZ,UD8MY;EClOZ,yBFGW;EEEX,sBFFW;EEOX,qBFPW;EEYX,oBFZW;EEiBX,iBFjBW;ECyOf,eAVgB;;AD7NlB;EGLE,QAJS;EAQT,OAZO;EHeP;EACA;EACA;;AAEF;EGXE,QAJS;EAQT,OAZO;EHqBP;EACA;;AACA;EACE;EACA;EAEA;;;AAEN;EACE;IACE;IACA;;EACA;IACE;;EACF;IACE;IACA;IACA;IACA;IACA;IACA;;EACF;IACE;IACA;IACA;IACA;;EACA;IACE;;EACN;IACE;IACA;IACA;IACA;IACA;;;AIvDJ;EACE;EACA;EACA;EACA;;;AAEF;EACE;EAEA;;;ACTF;EACE;EACA;EACA;;;AAEF;EACE;EACA;EACA;EACA;;ACKA;EACE;EACA;EACA;;;ADLJ;EACE;EACA;EACA;EACA;;;AAEF;EACE;EAEE;EACA;EACA;;AAEJ;EACE;EAEA;;;AAEF;EACE;IACE;IACA;IACA;IACA;IACA;;;AEpCJ;EACE;EACA;EACA;EACA;ENiEM;EACA;EACA;EAGA;EACA;EACA;EACA;ECpEA,mBKHO;ELQP,gBKRO;ELuBP,WKvBO;ELGP,qBKHO;ELQP,kBKRO;ELaP,iBKbO;ELkBP,gBKlBO;ELuBP,aKvBO;ENwQX,gBMxQW;;ADQb;EACE;EACA;EACA;;;ACRJ;EACE;EACA;EACA;EACA;;;AAEF;EJNI,QARO;EAYP,OAZO;EIgBT,YXfS;EWgBT;;AACA;EACE;;ADNF;EACE;EACA;EACA;;;ACMJ;EACE;EACA;EN4CM;EACA;EACA;EAGA;EACA;EACA;EACA;ECpEA,mBKkBO;ELbP,gBKaO;ELEP,WKFO;ELlBP,qBKkBO;ELbP,kBKaO;ELRP,iBKQO;ELHP,gBKGO;ELEP,aKFO;ENmPX,gBMnPW;EAEb;;ADfA;EACE;EACA;EACA;;;ACcJ;EACE;EACA;ENoCM;EACA;EACA;EAGA;EACA;EACA;EACA;EM1CN;EACA;EACA;EL5BM,mBK6BO;ELxBP,gBKwBO;ELTP,WKSO;EL7BP,qBK6BO;ELxBP,kBKwBO;ELnBP,iBKmBO;ELdP,gBKcO;ELTP,aKSO;ENwOX,gBMxOW;EL7BP,kBDkOY;EC7NZ,eD6NY;EC9MZ,UD8MY;EClOZ,yBK8BW;ELzBX,sBKyBW;ELpBX,qBKoBW;ELfX,oBKeW;ELVX,iBKUW;EN8Mf,eAVgB;;AMlMlB;EACE;EACA;;;AAEJ;EACE;EAEA;;;AAEF;EACE;IACE;IACA;IACA;IACA;IACA;IACA;INYI;IACA;IACA;IAGA;IACA;IACA;IACA;IMlBJ;IACA;ILnDI,mBKoDS;IL/CT,gBK+CS;ILhCT,WKgCS;ILpDT,qBKoDS;IL/CT,kBK+CS;IL1CT,iBK0CS;ILrCT,gBKqCS;ILhCT,aKgCS;INiNb,gBMjNa;ILpDT,kBDkOY;IC7NZ,eD6NY;IC9MZ,UD8MY;IClOZ,yBKqDa;ILhDb,sBKgDa;IL3Cb,qBK2Ca;ILtCb,oBKsCa;ILjCb,iBKiCa;INuLjB,eAVgB;;EM5KhB;INMI;IACA;IACA;IAGA;IACA;IACA;IACA;ICpEA,mBKwDW;ILnDX,gBKmDW;ILpCX,WKoCW;ILxDX,qBKwDW;ILnDX,kBKmDW;IL9CX,iBK8CW;ILzCX,gBKyCW;ILpCX,aKoCW;IN6Mf,gBM7Me;;EDnDjB;IACE;IACA;IACA;;ECkDA;IACE;IACA;IACA;IACA;IACA;;;ACxEN;EACE;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;;AAEA;EACE;EAEE;EACA;EACF;EACA;;AAEF;EACE;EAEE;EACA;EACF;EACA;;;AAEJ;EACE;EACA;EACA;EAEE;;;AAEJ;EACE;EACA;EACA;EAEE;;;AAEJ;EACE;EACA;EACA;EAEE;;;AAEJ;EACE;EACA;EACA;EAEE;;;AAEJ;EACE;EACA;EACA;EAEE","sourcesContent":["// normalize.css v3.0.1 | MIT License | git.io/normalize\nhtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}","@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(//themes.googleusercontent.com/static/fonts/opensans/v8/cJZKeOuBrn4kERxqtaUH3bO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');\n}","//\tTypography\n\n.gigantic, .huge, .large, .bigger, .big, \nh1, h2, h3, h4, h5, h6\n  color: $accent-color\n  font-weight: bold\n\n.gigantic\n  font-size: 110px\n  line-height: 1.09\n  letter-spacing: -2px\n\n.huge, h1\n  font-size: 68px\n  line-height: 1.05\n  letter-spacing: -1px\n\n.large, h2\n  font-size: 42px\n  line-height: 1.14\n\n.bigger, h3 \n  font-size: 26px\n  line-height: 1.38\n\n.big, h4\n  font-size: 22px\n  line-height: 1.38\n\n.small, small \n  font-size: 10px\n  line-height: 1.2\n\n\n\np\n  margin: 0 0 20px 0\n\nem\n  font-style: italic\n\nstrong\n  font-weight: bold\n\nhr\n  border: solid #ddd\n  border-width: 1px 0 0\n  clear: both\n  margin: 10px 0 30px\n  height: 0\n\n\n\n// Links\n\na\n  color: $link-color\n  text-decoration: none\n  outline: 0\n  \na:hover, a:focus\n  color: lighten($link-color, 20%)\n\n\n\n// Selection colors (easy to forget)\n\n::selection\n  background: $selection-color\n  \n::-moz-selection\n  background: $selection-color\n  \nimg::selection\n  background: transparent\n  \nimg::-moz-selection\n  background: transparent\n  \nbody\n  -webkit-tap-highlight-color: $selection-color\n\n\n\n// Basic Styles\n\nbody\n  background: $bg-color\n  font-size: 14px\n  line-height: 1.6\n  font-family: 'Open Sans' sans-serif\n  color: $text-color\n  -webkit-font-smoothing: antialiased\n  -webkit-text-size-adjust: 100%\n","$primary-color: #318131\n$accent-color: #153715\n$bg-color: #F6F6F8\n$altbg-color: #d3d7da\n$selection-color: #FFF498\n$text-color: #2E2D33\n\n$link-color: $accent-color\n","%small-bold\n  color: rgba(0,0,0,0.7)\n  font:\n    size: 18px\n    weight: 700\n    text-transform: uppercase\n","header\n  height: 200px\n  max-width: 960px\n  background: url(../img/image-bg.jpg) center center\n  background-size: cover\n  margin: 0 auto\n  float: none\n\n  nav\n    float: right\n    margin: 30px 20px 0px 0px\n    a\n      display: inline-block\n      margin-left: 20px\n\n      @extend %small-bold\n\n      &:hover\n        color: rgba(0,0,0,1)\n\n  h1\n    float: left\n    margin: 20px 0px 0px 20px\n    font:\n      size: 32px\n      weight: 700\n    color: rgba(0,0,0,0.7)\n    text-transform: uppercase\n    &:hover\n      color: rgba(0,0,0,1)\n","footer\n  height: 100px\n  max-width: 960px\n  background: url(../img/image-bg.jpg) center center\n  background-size: cover\n  margin: 0 auto\n  float: none\n\n  .content-wrap\n    margin: 30px\n    float: right\n\n    .copyright\n      margin: 0\n      float: right\n      @extend %small-bold\n      font-size: 10px\n    a\n      @extend %small-bold\n      display: inline-block\n      margin-left: 20px\n\n      &:hover\n        color: rgba(0,0,0,1)\n","section\n  max-width: 960px\n  margin: 0 auto\n  float: none\n  padding: 20px 20px\n\n\n.about-lockup\n  max-width: 860px\n  +display(flex)\n  margin: 0 auto\n  +align-items(center)\n  +justify-content(space-around)\n\n  .face\n    +size(300px 220px)\n    background: url(/assets/img/bio-photo.png)\n    background-size: cover\n    order: 1\n\n  .about-txt\n    +size(500px auto)\n    order: 2\n    text-align: center \n    h3\n      margin-left: -20px\n      padding-top: 10\n      @extend %small-bold\n      text-align: center\n\n@media screen and (max-width: 650px)\n  .about-lockup\n    display: block\n    text-align: center\n    div\n      display: inline-block\n    .face\n      display: block\n      background-postion: center center\n      background-repeat: no-repeat\n      width: 200px\n      margin-left: auto\n      margin-right: auto\n    .about-txt\n      display: block\n      width: auto\n      margin-left: auto\n      margin-right: auto\n      h3\n        margin-left: -11px\n  .blurb\n    max-width: 600px\n    padding: 0 10px\n    margin: 0 auto\n    font-size: 16px\n    font-weight: 100\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0.0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n//  flex | inline-flex\n    @if $value == \"flex\" {\n        // 2009\n        display: -webkit-box;\n        display: -moz-box;\n        display: box;\n\n        // 2012\n        display: -webkit-flex;\n        display: -moz-flex;\n        display: -ms-flexbox; // 2011 (IE 10)\n        display: flex;\n    }\n\n    @elseif $value == \"inline-flex\" {\n        display: -webkit-inline-box;\n        display: -moz-inline-box;\n        display: inline-box;\n\n        display: -webkit-inline-flex;\n        display: -moz-inline-flex;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n    }\n\n    @else {\n        display: $value;\n    }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n    // Grab flex-grow for older browsers.\n    $flex-grow: nth($value, 1);\n\n    // 2009\n    @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n    // 2011 (IE 10), 2012\n    @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)      \n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n    // Alt values.\n    $value-2009: $value;\n    $value-2011: $value;\n    $direction: \"normal\";\n\n    @if $value == row {\n        $value-2009: horizontal;\n    }\n\n    @elseif $value == \"row-reverse\" {\n        $value-2009: horizontal;\n        $direction: reverse;\n    }\n\n    @elseif $value == column {\n        $value-2009: vertical;\n    }\n\n    @elseif $value == \"column-reverse\" {\n        $value-2009: vertical;\n        $direction: reverse;\n    }\n\n    // 2009\n    @include prefixer(box-orient, $value-2009, webkit moz spec);\n    @if $direction == \"reverse\" {\n        @include prefixer(box-direction, $direction, webkit moz spec);\n    }\n\n    // 2012\n    @include prefixer(flex-direction, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == nowrap {\n        $alt-value: single;\n    }\n\n    @elseif $value == wrap {\n        $alt-value: multiple;\n    }\n\n    @elseif $value == \"wrap-reverse\" {\n        $alt-value: multiple;\n    }\n\n    @include prefixer(box-lines, $alt-value, webkit moz spec);\n    @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n    @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n    // 2009\n    @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n    // 2012\n    @include prefixer(order, $int, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n    @include prefixer(flex-grow, $number, webkit moz spec);\n    -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n    @include prefixer(flex-shrink, $number, webkit moz spec);\n    -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n    @include prefixer(flex-basis, $width, webkit moz spec);\n    -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content ($value: flex-start) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }\n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $alt-value: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $alt-value: center;\n    }\n\n    // 2009\n    @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n    // 2011 (IE 10)\n    -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n    $alt-value: $value;\n\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    // 2009\n    @include prefixer(box-align, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(align-items, $value, webkit moz ms o spec);\n    \n    // 2011 (IE 10)\n    -ms-flex-align: $alt-value;    \n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    // 2012\n    @include prefixer(align-self, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $value-2011: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $value-2011: distribute;\n    }\n\n    // 2012\n    @include prefixer(align-content, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-line-pack: $value-2011;\n}\n\n","//************************************************************************//\n// Example: @include prefixer(border-radius, $radii, webkit ms spec);\n//************************************************************************//\n// Variables located in /settings/_prefixer.scss\n\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    }\n    @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    }\n    @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    }\n    @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    }\n    @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    }\n    @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin size($size) {\n  $height: nth($size, 1);\n  $width: $height;\n\n  @if length($size) > 1 {\n    $height: nth($size, 2);\n  }\n\n  @if $height == auto or (type-of($height) == number and not unitless($height)) {\n    height: $height;\n  }\n\n  @if $width == auto or (type-of($width) == number and not unitless($width)) {\n    width: $width;\n  }\n}\n","section\n  max-width: 960px\n  margin: 0 auto\n  float: none\n  padding: 20px 20px\n\nh3\n  padding: 0 20px\n  @extend %small-bold\n  text-align: left\n",".alt-section\n  max-width: 920px\n  margin: 0 auto\n  float: none\n\n.teaching-list\n  max-width: 900px\n  margin: 0 auto\n  float: none\n  padding: 0px 20px\n  +clearfix\n\n.course\n  display: block\n  width: 100%\n  height: 40px\n  float: left\n\na\n  color: rgba(0,0,0,0.7)\n  font:\n    size: 14px\n    weight: 700\n    text-transform: uppercase\n  &:hover\nh3\n  padding: 0 20px\n  @extend %small-bold\n  text-align: left\n\n@media screen and (max-width: 650px)\n  .course\n    display: block\n    width: 100%\n    height: 40px\n    float: left\n    padding: 10px 0px\n","// Modern micro clearfix provides an easy way to contain floats without adding additional markup.\n//\n// Example usage:\n//\n//    // Contain all floats within .wrapper\n//    .wrapper {\n//      @include clearfix;\n//      .content,\n//      .sidebar {\n//        float : left;\n//      }\n//    }\n\n@mixin clearfix {\n  &:after {\n    content:\"\";\n    display:table;\n    clear:both;\n  }\n}\n\n// Acknowledgements\n// Beat *that* clearfix: [Thierry Koblentz](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php)\n",".contact-section\n  max-width: 960px\n  margin: 0 auto\n  float: none\n  padding: 20px 20px\n  +display(flex)\n  +align-items(center)\n  +clearfix\n\n.contact-info\n  max-width: 200px\n  margin: 0 auto\n  float: left\n  padding: 0px 20px\n\n.contact-icon\n  +size(50px)\n  background: $bg-color\n  float: left\n  path\n    fill: rgba(0,0,0,0.7)\n  +clearfix\n\n.contact-link\n  margin: 0 auto\n  float: left\n  +display(flex)\n  +align-items(center)\n  +clearfix\n  padding: 10px 10px\n\n.contact-links\n  float: right\n  max-width: 500px\n  +display(flex)\n  flex-direction: row\n  margin: 0px 50px\n  flex-wrap: wrap\n  +align-items(center)\n  +justify-content(space-around)\n\n  a\n    text-align: center\n    margin: 0 auto\n\nh3\n  padding: 0 20px\n  @extend %small-bold\n  text-align: left\n\n@media screen and (max-width: 650px)\n  .contact-links\n    display: block\n    width: 100\n    text-align: center\n    float: none\n    margin-left: auto\n    margin-right: auto\n    +display(flex)\n    flex-direction: row\n    flex-wrap: wrap\n    +align-items(center)\n    +justify-content(space-around)\n    .contact-link\n      +display(flex)\n      +align-items(center)\n      +clearfix\n    .contact-info\n      display: block\n      width: auto\n      margin-left: auto\n      margin-right: auto\n      text-align: center\n",".course_image\n  float: right\n  background-size: cover\n  height: 200px\n  width: 400px\n  margin: 0px 20px 20px 20px\n  padding: 20px 20px\n\n\n.course_section\n  max-width: 960px\n  margin: 0 auto\n  float: none\n  padding: 20px 20px\n\n  h1\n    margin: 20px 0px 0px 20px\n    font:\n      size: 32px\n      weight: 700\n    color: rgba(0,0,0,0.7)\n    text-transform: uppercase\n\n  h2\n    margin: 20px 0px 0px 20px\n    font:\n      size: 24px\n      weight: 700\n    color: rgba(0,0,0,0.7)\n    text-transform: uppercase\n\n.course_description\n  margin: 20px 0px 50px 20px\n  display: block\n  width: auto\n  font:\n    size: 18px\n\n.course_information\n  margin: 20px 0px 50px 0px\n  display: block\n  width: auto\n  font:\n    size: 18px\n\n.course_data\n  margin: 0px 0px 0px 20px\n  display: block\n  width: auto\n  font:\n    size: 18px\n\n.lecture_links\n  margin: 0 auto\n  display: block\n  width: auto\n  font:\n    size: 18px\n\n.lecture_list\n  margin: 20px 0px 0px 20px\n  display: block\n  width: auto\n  font:\n    size: 18px\n"],"file":"main.css"}